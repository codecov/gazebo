sha := $(shell git rev-parse --short=7 HEAD)
release_version := `cat VERSION`
build_date ?= $(shell git show -s --date=iso8601-strict --pretty=format:%cd $$sha)
image := us-docker.pkg.dev/genuine-polymer-165712/codecov/codecov-frontend-gazebo
enterprise_image := us-docker.pkg.dev/genuine-polymer-165712/codecov/enterprise-frontend
devops_image := us-docker.pkg.dev/genuine-polymer-165712/codecov-devops/dive:latest
dockerhub_image := codecov/enterprise-frontend
export DOCKER_BUILDKIT := 1

gcr.auth:
	gcloud auth configure-docker us-docker.pkg.dev

build.local:
	docker build -f docker/Dockerfile . -t ${image}:latest --build-arg REACT_APP_STAGE=development --build-arg REACT_APP_CODECOV_VERSION=${release_version} --build-arg REACT_APP_ENV_ARG=development

build.local.enterprise:
	docker build -f docker/Dockerfile . -t ${enterprise_image}:${release_version}-latest \
	--build-arg REACT_APP_STAGE=development \
	--build-arg REACT_APP_ENV_ARG=enterprise \
	--build-arg REACT_APP_CODECOV_VERSION=${release_version}

build:
	docker build -f docker/Dockerfile . -t ${image}:${ENV}-${release_version}-${sha} \
	--build-arg REACT_APP_STAGE=${ENV} \
	--build-arg REACT_APP_CODECOV_VERSION=${release_version} \
	--build-arg REACT_APP_ENV_ARG=${ENV} \
	--label "org.label-schema.build-date"="$(build_date)" \
	--label "org.label-schema.name"="Codecov Gazebo" \
	--label "org.label-schema.vendor"="Codecov" \
	--label "org.label-schema.version"="${release_version}-${sha}" \
	--squash

build.enterprise:
	$(MAKE) build
	docker build -f docker/Dockerfile.enterprise . -t ${enterprise_image}:${release_version}-${sha} \
    	--build-arg FRONTEND_IMAGE=${image}:${ENV}-${release_version}-${sha} \
    	--label "org.label-schema.build-date"="$(build_date)" \
    	--label "org.label-schema.name"="Self-Hosted Frontend" \
    	--label "org.label-schema.vendor"="Codecov" \
    	--label "org.label-schema.version"="${release_version}-${sha}" \
    	--squash

push:
	docker tag ${image}:${ENV}-${release_version}-${sha} ${image}:${ENV}-${release_version}-latest
	docker push ${image}:${ENV}-${release_version}-${sha}
	docker push ${image}:${ENV}-${release_version}-latest

push.enterprise:
	docker tag ${enterprise_image}:${release_version}-${sha} ${enterprise_image}:${release_version}-latest
	docker push ${enterprise_image}:${release_version}-${sha}
	docker push ${enterprise_image}:${release_version}-latest

pull-for-release:
	docker pull ${enterprise_image}:${release_version}-${sha}

release:
	docker tag ${enterprise_image}:${release_version}-${sha} ${dockerhub_image}:${release_version}
	docker tag ${enterprise_image}:${release_version}-${sha} ${dockerhub_image}:latest-stable
	docker push ${dockerhub_image}:${release_version}
	docker push ${dockerhub_image}:latest-stable

pull.devops:
	docker pull ${devops_image}

dive:
	$(MAKE) pull.devops
	docker run -e CI=true  -v /var/run/docker.sock:/var/run/docker.sock ${devops_image} dive ${image}:${ENV}-${release_version}-${sha} --lowestEfficiency=0.97 --highestUserWastedPercent=0.06

deep-dive:
	$(MAKE) pull.devops
	docker run -v /var/run/docker.sock:/var/run/docker.sock -v "$(shell pwd)":/tmp ${devops_image} /usr/bin/deep-dive -v --config /tmp/.deep-dive.yaml ${enterprise_image}:${release_version}-${sha}

tag.qa-release:
	git tag -a qa-${release_version}-${sha}-${EPOCH} -m "Autogenerated tag for enterprise frontend QA ${release_version} ${sha}"
	git push origin qa-${release_version}-${sha}-${EPOCH}