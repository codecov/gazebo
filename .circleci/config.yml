
version: 2.1 # using 2.1 provides access to orbs and other features

jobs:

  install:
    docker:
      - image: circleci/node:14.5.0
    steps:
      - checkout
      - run:
          name: Install deps
          command: npm ci
      - save_cache:
          key: npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  eslint: 
    docker:
      - image: circleci/node:14.5.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Run linter
          command: npm run lint

  test:
    docker:
      - image: circleci/node:14.5.0
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Add junit
          command: npm i jest-junit
      - run:
          name: Run tests
          command: |
            TESTFILES=$(circleci tests glob "src/**/*.spec.js" | circleci tests split --split-by=timings)
            CI=true npm run test:ci $TESTFILES
      - store_test_results:
          path: ./reports/junit/
      - persist_to_workspace:
          root: .
          paths:
            - 'coverage'

  coverage:
    docker:
      - image: circleci/node:14.5.0
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Upload coverage to codecov
          command: |
            wget https://github.com/codecov/uploader/releases/download/v0.1.0_1681/codecov-linux
            chmod +x ./codecov-linux
            ./codecov-linux
            # bash <(curl -s https://codecov.io/bash)
      - run:
          name: Upload coverage to codecov staging
          command: bash <(curl -s https://stage-web.codecov.dev/bash) -t $CODECOV_TOKEN_STAGING

  sentry:
    docker:
      - image: circleci/node:14.5.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Sentry Release
          command: npm run sentry

  build:
    docker:
      - image: circleci/node:14.5.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Build the spa
          command: npm run build
      - run:
          name: Check bundlesize
          command: npm run bundlesize

  storybook:
    docker:
      - image: circleci/node:14.5.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Deploy to Chromatic
          command: npm run chromatic

workflows:
  version: 2
  test-and-build:
    jobs:
      - install
      - eslint:
          requires:
            - install
      # - storybook:
      #     filters:
      #       branches:
      #         ignore: /^dependabot.*/
      #     requires:
      #       - eslint
      - test:
          requires:
            - eslint
      - coverage:
          requires:
            - test
      # - sentry:
      #     requires:
      #       - eslint
      # - build:
      #     requires:
      #       - eslint
