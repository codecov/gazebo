worker_processes 1;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Define custom log format to include reponse times
    log_format main_timed '${DOLLAR}remote_addr - ${DOLLAR}remote_user [${DOLLAR}time_local] "${DOLLAR}request" '
                          '${DOLLAR}status ${DOLLAR}body_bytes_sent "${DOLLAR}http_referer" '
                          '"${DOLLAR}http_user_agent" "${DOLLAR}http_x_forwarded_for" '
                          '${DOLLAR}request_time ${DOLLAR}upstream_response_time ${DOLLAR}pipe ${DOLLAR}upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout 65;

    # Max body size
    client_max_body_size 192M;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;
    # Default server definition
    server {
        listen [::]:8080 default_server;
        listen 8080 default_server;
        server_name _;

        sendfile off;

        root /var/www/app/gazebo;
        index index.html;

       # try to serve file directly, fallback to index.html
       location / {
           try_files ${DOLLAR}uri /index.html =404;
           add_header X-Gazebo true always;
           add_header Access-Control-Allow-Origin *;
       }


        location /uploader {
            try_files ${DOLLAR}uri ${DOLLAR}uri/index.html ${DOLLAR}uri/ /index.html =404;
            add_header X-Uploader true always;
            root  /var/www/uploader;
        }
        location ~ ^/uploader/.*/codecov.*${DOLLAR} {
            add_header Content-disposition "attachment; filename=${DOLLAR}1";
            add_header X-Uploader true always;
            root  /var/www;
        }
        location ~* \.(jpg|jpeg|gif|png)${DOLLAR} {
            expires 180d;
        }

        location ~* \.(css|js|ico)${DOLLAR} {
            expires 1d;
        }

        # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        location /frontend_health {
            return 200 '${BUILD_VERSION} ${BUILD_ID}';
            add_header Content-Type text/plain;
        }

    }

    gzip on;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/rss+xml
        image/svg+xml/javascript;
    gzip_vary on;
    gzip_disable "msie6";

    # Include other server configs
    include /etc/nginx/conf.d/*.conf;
}
